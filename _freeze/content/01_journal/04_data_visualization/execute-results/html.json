{
  "hash": "761f3e5bca2b7a9512bf6d13f784d3b9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Automated Machine Learning with H2O (II)\"\nauthor: \"Miguel Peñate\"\nformat:\n  html:\n    code-fold: true\n    self-contained: false\n---\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n#>  Connection successful!\n#> \n#> R is connected to the H2O cluster: \n#>     H2O cluster uptime:         22 hours 39 minutes \n#>     H2O cluster timezone:       Europe/Berlin \n#>     H2O data parsing timezone:  UTC \n#>     H2O cluster version:        3.44.0.3 \n#>     H2O cluster version age:    6 months and 2 days \n#>     H2O cluster name:           H2O_started_from_R_migue_pzv484 \n#>     H2O cluster total nodes:    1 \n#>     H2O cluster total memory:   3.22 GB \n#>     H2O cluster total cores:    6 \n#>     H2O cluster allowed cores:  6 \n#>     H2O cluster healthy:        TRUE \n#>     H2O Connection ip:          localhost \n#>     H2O Connection port:        54321 \n#>     H2O Connection proxy:       NA \n#>     H2O Internal Security:      FALSE \n#>     R Version:                  R version 4.3.3 (2024-02-29 ucrt)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> Rows: 19,053\n#> Columns: 23\n#> $ sku               <dbl> 1113121, 1113268, 1113874, 1114222, 1114823, 1115453…\n#> $ national_inv      <dbl> 0, 0, 20, 0, 0, 55, -34, 4, 2, -7, 1, 2, 0, 0, 0, 0,…\n#> $ lead_time         <dbl> 8, 8, 2, 8, 12, 8, 8, 9, 8, 8, 8, 8, 12, 2, 12, 4, 2…\n#> $ in_transit_qty    <dbl> 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0…\n#> $ forecast_3_month  <dbl> 6, 2, 45, 9, 31, 216, 120, 43, 4, 56, 2, 5, 5, 54, 4…\n#> $ forecast_6_month  <dbl> 6, 3, 99, 14, 31, 360, 240, 67, 6, 96, 4, 9, 6, 72, …\n#> $ forecast_9_month  <dbl> 6, 4, 153, 21, 31, 492, 240, 115, 9, 112, 6, 13, 9, …\n#> $ sales_1_month     <dbl> 0, 1, 16, 5, 7, 30, 83, 5, 1, 13, 0, 1, 0, 0, 1, 0, …\n#> $ sales_3_month     <dbl> 4, 2, 42, 17, 15, 108, 122, 22, 5, 30, 2, 5, 4, 0, 3…\n#> $ sales_6_month     <dbl> 9, 3, 80, 36, 33, 275, 144, 40, 6, 56, 3, 8, 5, 0, 4…\n#> $ sales_9_month     <dbl> 12, 3, 111, 43, 47, 340, 165, 58, 9, 76, 4, 11, 6, 0…\n#> $ min_bank          <dbl> 0, 0, 10, 0, 2, 51, 33, 4, 2, 0, 0, 0, 3, 4, 0, 0, 0…\n#> $ potential_issue   <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\"…\n#> $ pieces_past_due   <dbl> 1, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n#> $ perf_6_month_avg  <dbl> 0.90, 0.96, 0.81, 0.96, 0.98, 0.00, 1.00, 0.69, 1.00…\n#> $ perf_12_month_avg <dbl> 0.89, 0.97, 0.88, 0.98, 0.98, 0.00, 0.97, 0.68, 0.95…\n#> $ local_bo_qty      <dbl> 0, 0, 0, 0, 0, 0, 34, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, …\n#> $ deck_risk         <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\"…\n#> $ oe_constraint     <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\"…\n#> $ ppap_risk         <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No\", \"No\", \"No…\n#> $ stop_auto_buy     <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Ye…\n#> $ rev_stop          <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\"…\n#> $ went_on_backorder <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Ye…\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |==                                                                    |   3%\n#> 17:15:47.251: AutoML: XGBoost is not available; skipping it.\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |============                                                          |  18%\n  |                                                                            \n  |================                                                      |  22%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |======================                                                |  32%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |================================                                      |  45%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |======================================                                |  55%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |==============================================                        |  65%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |========================================================              |  81%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |======================================================================| 100%\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>                                                  model_id      rmse        mse\n#> 1 StackedEnsemble_BestOfFamily_4_AutoML_8_20240622_171547 0.2227323 0.04960967\n#> 2    StackedEnsemble_AllModels_4_AutoML_8_20240622_171547 0.2228932 0.04968140\n#> 3    StackedEnsemble_AllModels_3_AutoML_8_20240622_171547 0.2237833 0.05007899\n#> 4 StackedEnsemble_BestOfFamily_3_AutoML_8_20240622_171547 0.2240453 0.05019632\n#> 5    StackedEnsemble_AllModels_2_AutoML_8_20240622_171547 0.2240642 0.05020478\n#> 6    StackedEnsemble_AllModels_1_AutoML_8_20240622_171547 0.2265414 0.05132100\n#>          mae      rmsle mean_residual_deviance\n#> 1 0.09773137 0.09051802             0.04960967\n#> 2 0.09987629 0.09053519             0.04968140\n#> 3 0.11761368 0.09141547             0.05007899\n#> 4 0.11887668 0.09152755             0.05019632\n#> 5 0.11860405 0.09153442             0.05020478\n#> 6 0.12001627 0.09248435             0.05132100\n#> \n#> [26 rows x 6 columns]\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> Model Details:\n#> ==============\n#> \n#> H2ORegressionModel: stackedensemble\n#> Model ID:  StackedEnsemble_BestOfFamily_4_AutoML_8_20240622_171547 \n#> Model Summary for Stacked Ensemble: \n#>                                     key            value\n#> 1                     Stacking strategy cross_validation\n#> 2  Number of base models (used / total)              4/4\n#> 3      # GBM base models (used / total)              1/1\n#> 4      # DRF base models (used / total)              2/2\n#> 5      # GLM base models (used / total)              1/1\n#> 6                 Metalearner algorithm              GBM\n#> 7    Metalearner fold assignment scheme           Random\n#> 8                    Metalearner nfolds                5\n#> 9               Metalearner fold_column               NA\n#> 10   Custom metalearner hyperparameters             None\n#> \n#> \n#> H2ORegressionMetrics: stackedensemble\n#> ** Reported on training data. **\n#> \n#> MSE:  0.02111206\n#> RMSE:  0.1452999\n#> MAE:  0.06251147\n#> RMSLE:  0.05870329\n#> Mean Residual Deviance :  0.02111206\n#> \n#> \n#> \n#> H2ORegressionMetrics: stackedensemble\n#> ** Reported on cross-validation data. **\n#> ** 5-fold cross-validation on training data (Metrics computed for combined holdout predictions) **\n#> \n#> MSE:  0.04960967\n#> RMSE:  0.2227323\n#> MAE:  0.09773137\n#> RMSLE:  0.09051802\n#> Mean Residual Deviance :  0.04960967\n#> \n#> \n#> Cross-Validation Metrics Summary: \n#>                            mean       sd cv_1_valid cv_2_valid cv_3_valid\n#> mae                    0.097706 0.002865   0.095470   0.097543   0.102660\n#> mean_residual_deviance 0.049591 0.003491   0.047365   0.050442   0.054429\n#> mse                    0.049591 0.003491   0.047365   0.050442   0.054429\n#> r2                     0.521512 0.046619   0.571272   0.516330   0.506078\n#> residual_deviance      0.049591 0.003491   0.047365   0.050442   0.054429\n#> rmse                   0.222581 0.007829   0.217634   0.224592   0.233301\n#> rmsle                  0.090470 0.002838   0.088585   0.091107   0.094128\n#>                        cv_4_valid cv_5_valid\n#> mae                      0.096457   0.096401\n#> mean_residual_deviance   0.045247   0.050474\n#> mse                      0.045247   0.050474\n#> r2                       0.559512   0.454369\n#> residual_deviance        0.045247   0.050474\n#> rmse                     0.212713   0.224664\n#> rmsle                    0.086819   0.091711\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>    predict\n#> 1 1.491070\n#> 2 1.687386\n#> 3 1.833314\n#> 4 1.842537\n#> 5 1.871452\n#> 6 1.715574\n#> \n#> [2858 rows x 1 column]\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] \"C:\\\\Users\\\\migue\\\\Desktop\\\\Hamburg\\\\TUHH\\\\ss24-bdml-miguelp98\\\\h2o_models\\\\StackedEnsemble_BestOfFamily_4_AutoML_8_20240622_171547\"\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> Model Details:\n#> ==============\n#> \n#> H2ORegressionModel: stackedensemble\n#> Model ID:  StackedEnsemble_BestOfFamily_4_AutoML_8_20240622_171547 \n#> Model Summary for Stacked Ensemble: \n#>                                     key            value\n#> 1                     Stacking strategy cross_validation\n#> 2  Number of base models (used / total)              4/4\n#> 3      # GBM base models (used / total)              1/1\n#> 4      # DRF base models (used / total)              2/2\n#> 5      # GLM base models (used / total)              1/1\n#> 6                 Metalearner algorithm              GBM\n#> 7    Metalearner fold assignment scheme           Random\n#> 8                    Metalearner nfolds                5\n#> 9               Metalearner fold_column               NA\n#> 10   Custom metalearner hyperparameters             None\n#> \n#> \n#> H2ORegressionMetrics: stackedensemble\n#> ** Reported on training data. **\n#> \n#> MSE:  0.02111206\n#> RMSE:  0.1452999\n#> MAE:  0.06251147\n#> RMSLE:  0.05870329\n#> Mean Residual Deviance :  0.02111206\n#> \n#> \n#> \n#> H2ORegressionMetrics: stackedensemble\n#> ** Reported on cross-validation data. **\n#> ** 5-fold cross-validation on training data (Metrics computed for combined holdout predictions) **\n#> \n#> MSE:  0.04960967\n#> RMSE:  0.2227323\n#> MAE:  0.09773137\n#> RMSLE:  0.09051802\n#> Mean Residual Deviance :  0.04960967\n#> \n#> \n#> Cross-Validation Metrics Summary: \n#>                            mean       sd cv_1_valid cv_2_valid cv_3_valid\n#> mae                    0.097706 0.002865   0.095470   0.097543   0.102660\n#> mean_residual_deviance 0.049591 0.003491   0.047365   0.050442   0.054429\n#> mse                    0.049591 0.003491   0.047365   0.050442   0.054429\n#> r2                     0.521512 0.046619   0.571272   0.516330   0.506078\n#> residual_deviance      0.049591 0.003491   0.047365   0.050442   0.054429\n#> rmse                   0.222581 0.007829   0.217634   0.224592   0.233301\n#> rmsle                  0.090470 0.002838   0.088585   0.091107   0.094128\n#>                        cv_4_valid cv_5_valid\n#> mae                      0.096457   0.096401\n#> mean_residual_deviance   0.045247   0.050474\n#> mse                      0.045247   0.050474\n#> r2                       0.559512   0.454369\n#> residual_deviance        0.045247   0.050474\n#> rmse                     0.212713   0.224664\n#> rmsle                    0.086819   0.091711\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>    predict\n#> 1 1.491070\n#> 2 1.687386\n#> 3 1.833314\n#> 4 1.842537\n#> 5 1.871452\n#> 6 1.715574\n#> \n#> [2858 rows x 1 column]\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}